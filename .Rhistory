renv::activate()
renv::restore()
install.packages("CohortConstructor")
library(dplyr)
library(CDMConnector)
library(IncidencePrevalence)
library(ggplot2)
library(tidyr)
library(CodelistGenerator)
library(PatientProfiles)
library(CohortCharacteristics)
library(DrugUtilisation)
library(here)
library(stringr)
library(readr)
library(DBI)
library(RPostgres)
library(duckdb)
library(CohortConstructor)
library(dplyr)
library(CDMConnector)
library(IncidencePrevalence)
library(ggplot2)
library(tidyr)
library(CodelistGenerator)
library(PatientProfiles)
library(CohortCharacteristics)
library(DrugUtilisation)
library(here)
library(stringr)
library(readr)
library(DBI)
library(RPostgres)
library(duckdb)
library(CohortConstructor)
con <- dbConnect(duckdb(), dbdir = eunomiaDir())
cdm <- cdmFromCon(
con = con, cdmSchem = "main", writeSchema = "main", cdmName = "Eunomia")
# output folder
results_output<- paste0("Results_", cdmName(cdm))
# Prior observation to explore (in years)
prior_years <- c(seq(1,5,1))
#Output
output_folder <- here(results_output)
if (!dir.exists(output_folder)) {
dir.create(output_folder)
}
# Conditions
conditions_cohort_set <- readCohortSet(
path = here("1_InstantiateCohorts", "Cohorts", "Comorbidities")
)
# Conditions
conditions_cohort_set <- readCohortSet(
path = here("1_InstantiateCohorts", "Cohorts", "Comorbidities")
)
conditions_cohort_set
library(CodelistGenerator)
#> Warning: package 'CodelistGenerator' was built under R version 4.4.2
hip_fx_codes <- getCandidateCodes(cdm, "hip fracture")
#> Limiting to domains of interest
#> Getting concepts to include
#> Adding descendants
#> Search completed. Finishing up.
#> ✔ 1 candidate concept identified
#>
#> Time taken: 0 minutes and 0 seconds
forearm_fx_codes <- getCandidateCodes(cdm, "forearm fracture")
#> Limiting to domains of interest
#> Getting concepts to include
#> Adding descendants
#> Search completed. Finishing up.
#> ✔ 1 candidate concept identified
#>
#> Time taken: 0 minutes and 0 seconds
fx_codes <- newCodelist(list("hip_fracture" = hip_fx_codes$concept_id,
"forearm_fracture"= forearm_fx_codes$concept_id))
install.packages("CodelistGenerator")
install.packages("omopgenerics")
library(omopgenerics)
conditions_concepts
conditions_concepts <- readCohortSet(
path = here("1_InstantiateConcepts", "Concepts", "Comorbidities")
)
conditions_concepts
codesFromConceptSet(here("1_InstantiateConcepts", "Concepts", "Comorbidities"), cdm, type = c("codelist"))
codesFromConceptSet(here("1_InstantiateConcepts", "Concepts", "Comorbidities", "anemia.json"), cdm, type = c("codelist"))
here("1_InstantiateConcepts", "Concepts", "Comorbidities", "anemia.json")
codesFromConceptSet(here("1_InstantiateConcepts", "Concepts", "Comorbidities", "anemia.json"), cdm, type = c("concept_set_expression"))
codes <- codesFromConceptSet(here("1_InstantiateConcepts", "Concepts", "Comorbidities", "anemia.json"), cdm, type = c("concept_set_expression"))
View(codes)
here("1_InstantiateConcepts", "Concepts", "Comorbidities", "anemia.json")
codes <- codesFromConceptSet(here("1_InstantiateConcepts", "Concepts", "Comorbidities", "anemia.json"), cdm, type = c("concept_set_expression"))
codesFromConceptSet(here("1_InstantiateConcepts", "Concepts", "Comorbidities", "asthma.json"), cdm, type = c("concept_set_expression"))
codesFromConceptSet(here("1_InstantiateConcepts", "Concepts", "Comorbidities"), cdm, type = c("concept_set_expression"))
codes <- codesFromConceptSet(here("1_InstantiateConcepts", "Concepts", "Comorbidities"), cdm, type = c("concept_set_expression"))
here("1_InstantiateConcepts", "Concepts", "Comorbidities")
cdm
codes <- codesFromConceptSet(path=here("1_InstantiateConcepts", "Concepts", "Comorbidities"), cdm, type = c("concept_set_expression"))
? readCohortSet
codesFromConceptSet(path=here("1_InstantiateConcepts", "Concepts", "Comorbidities"), cdm, type = c("concept_set_expression"))
codesFromConceptSet(path=here("1_InstantiateConcepts", "Concepts", "Comorbidities"), cdm, type = c("concept_set_expression"))
codesFromConceptSet(path=here("1_InstantiateConcepts", "Concepts", "Comorbidities", "asthma"), cdm, type = c("concept_set_expression"))
rlang::last_trace()
rlang::last_trace(drop = FALSE)
codesFromConceptSet(path=here("1_InstantiateConcepts", "Concepts", "Comorbidities", "asthma.json"), cdm, type = c("concept_set_expression"))
codes <- codesFromConceptSet(path=here("1_InstantiateConcepts", "Concepts", "Comorbidities"),
cdm,
type = c("concept_set_expression"))
View(con)
View(codes)
here()
codesFromConceptSet(path=here("1_InstantiateConcepts", "Concepts", "Comorbidities"),
cdm,
type = c("codelist"))
codesFromConceptSet(path=here("1_InstantiateConcepts", "Concepts", "Comorbidities"),
cdm,
type = c("codelist"))
codes <- codesFromConceptSet(path=here("1_InstantiateConcepts", "Concepts", "Comorbidities"),
cdm,
type = c("codelist"))
View(codes)
codes
codes_list <- newCodelist(codes)
View(codes_list)
cdm$conditions <- cdm |>
conceptCohort(conceptSet = codes_list,
exit = "event_start_date",
name = "conditions")
cdm$conditions
settings(cdm$conditions)
.rs.restartR()
library(dplyr)
library(CDMConnector)
library(IncidencePrevalence)
library(ggplot2)
library(tidyr)
library(CodelistGenerator)
library(PatientProfiles)
library(CohortCharacteristics)
library(DrugUtilisation)
library(here)
library(stringr)
library(readr)
library(DBI)
library(RPostgres)
library(duckdb)
library(CohortConstructor)
library(omopgenerics)
con <- dbConnect(duckdb(), dbdir = eunomiaDir())
cdm <- cdmFromCon(
con = con, cdmSchem = "main", writeSchema = "main", cdmName = "Eunomia")
# output folder
results_output<- paste0("Results_", cdmName(cdm))
# Prior observation to explore (in years)
prior_years <- c(seq(1,5,1))
# Execute code
source(here("RunStudy.R"))
# Prior observation to explore (in years)
prior_years <- c(seq(1,5,1))
# Execute code
source(here("RunStudy.R"))
renv::install("omopgenerics")
renv::install("CohortConstructor")
.rs.restartR()
renv::activate()
renv::restore()
